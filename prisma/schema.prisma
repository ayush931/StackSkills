// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../app/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          String         @id @default(cuid())
  name        String?
  email       String?        @unique
  password    String?
  phone       String?
  role        Role           @default(USER)
  otp         String?
  verifyEmail Boolean        @default(false)
  otpExpiry   DateTime
  purchases   UserPurchase[]
  createdAt   DateTime       @default(now())
  updatedAt   DateTime       @updatedAt

  @@index([email])
  @@index([phone])
}

model UserPurchase {
  User        User?    @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId      String
  course      Course?  @relation(fields: [courseId], references: [id], onDelete: Cascade)
  courseId    Int
  purchasedAt DateTime @default(now())
  price       Decimal? @db.Decimal(10, 2)

  @@id([userId, courseId])
  @@index([courseId])
  @@index([userId])
}

model Course {
  id              Int            @id @default(autoincrement())
  title           String
  description     String         @db.Text
  thumbnail       String
  price           Decimal        @db.Decimal(10, 2)
  isPublished     Boolean        @default(false)
  slug            String         @unique
  coursePurchased UserPurchase[]
  content         Content[]
  createdAt       DateTime       @default(now())
  updatedAt       DateTime       @updatedAt

  @@index([slug])
  @@index([isPublished])
}

model Content {
  id          Int     @id @default(autoincrement())
  title       String
  description String
  imageUrl    String?
  videoUrl    String?
  order       Int?    @default(0)
  course      Course? @relation(fields: [courseId], references: [id], onDelete: Cascade)
  courseId    Int?
  isPublished Boolean @default(false)

  @@index([courseId])
}

enum Role {
  ADMIN
  USER
}